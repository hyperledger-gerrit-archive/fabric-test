# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

networks:
    behave:

services:

    zookeeper0:
        extends:
            file: docker-compose-base.yml
            service: zookeeper
        container_name: zookeeper0
        environment:
            - ZOO_MY_ID=1
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    zookeeper1:
        extends:
            file: docker-compose-base.yml
            service: zookeeper
        container_name: zookeeper1
        environment:
            - ZOO_MY_ID=2
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    zookeeper2:
        extends:
            file: docker-compose-base.yml
            service: zookeeper
        container_name: zookeeper2
        environment:
            - ZOO_MY_ID=3
            - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    kafka0:
        extends:
            file: docker-compose-base.yml
            service: kafka
        container_name: kafka0
        environment:
            - KAFKA_BROKER_ID=0
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        links:
            - zookeeper0:zookeeper0
            - zookeeper1:zookeeper1
            - zookeeper2:zookeeper2
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    kafka1:
        extends:
            file: docker-compose-base.yml
            service: kafka
        container_name: kafka1
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        links:
            - zookeeper0:zookeeper0
            - zookeeper1:zookeeper1
            - zookeeper2:zookeeper2
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    kafka2:
        extends:
            file: docker-compose-base.yml
            service: kafka
        container_name: kafka2
        environment:
            - KAFKA_BROKER_ID=2
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        links:
            - zookeeper0:zookeeper0
            - zookeeper1:zookeeper1
            - zookeeper2:zookeeper2
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    kafka3:
        extends:
            file: docker-compose-base.yml
            service: kafka
        container_name: kafka3
        environment:
            - KAFKA_BROKER_ID=3
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
        depends_on:
            - zookeeper0
            - zookeeper1
            - zookeeper2
        links:
            - zookeeper0:zookeeper0
            - zookeeper1:zookeeper1
            - zookeeper2:zookeeper2
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    orderer0.example.com:
        extends:
            file: docker-compose-base.yml
            service: orderer
        container_name: orderer0.example.com
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
        volumes:
            - ../configs/${CORE_PEER_NETWORKID}/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/ordererOrganizations/example.com/orderers/orderer0.example.com/tls:/var/hyperledger/tls
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
            - orderer1.example.com
            - orderer2.example.com
        links:
            - kafka0:kafka0
            - kafka1:kafka1
            - kafka2:kafka2
            - kafka3:kafka3
            - orderer1.example.com:orderer1.example.com
            - orderer2.example.com:orderer2.example.com
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    orderer1.example.com:
        extends:
            file: docker-compose-base.yml
            service: orderer
        container_name: orderer1.example.com
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
        volumes:
            - ../configs/${CORE_PEER_NETWORKID}/ordererOrganizations/example.com/orderers/orderer1.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/ordererOrganizations/example.com/orderers/orderer1.example.com/tls:/var/hyperledger/tls
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        links:
            - kafka0:kafka0
            - kafka1:kafka1
            - kafka2:kafka2
            - kafka3:kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    orderer2.example.com:
        extends:
            file: docker-compose-base.yml
            service: orderer
        container_name: orderer2.example.com
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
        volumes:
            - ../configs/${CORE_PEER_NETWORKID}/ordererOrganizations/example.com/orderers/orderer2.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/ordererOrganizations/example.com/orderers/orderer2.example.com/tls:/var/hyperledger/tls
        depends_on:
            - kafka0
            - kafka1
            - kafka2
            - kafka3
        links:
            - kafka0:kafka0
            - kafka1:kafka1
            - kafka2:kafka2
            - kafka3:kafka3
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    couchdb01:
        extends:
            file: docker-compose-base.yml
            service: couchdb
        container_name: couchdb01
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    peer0.org1.example.com:
        extends:
            file: docker-compose-base.yml
            service: peer
        container_name: peer0.org1.example.com
        environment:
            - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
            - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb01:5984
            - CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org1.example.com:7052
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - CORE_PEER_ID=peer0.org1.example.com
            - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.example.com:7051
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
            - CORE_PEER_LOCALMSPID=org1.example.com
        volumes:
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/var/hyperledger/tls
        depends_on:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com
            - couchdb01
        links:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    couchdb02:
        extends:
            file: docker-compose-base.yml
            service: couchdb
        container_name: couchdb02
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    peer0.org2.example.com:
        extends:
            file: docker-compose-base.yml
            service: peer
        container_name: peer0.org2.example.com
        environment:
            - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
            - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb02:5984
            - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org2.example.com:7052
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - CORE_PEER_ID=peer0.org2.example.com
            - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org2.example.com:7051
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
            - CORE_PEER_LOCALMSPID=org2.example.com
        volumes:
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/var/hyperledger/tls
        depends_on:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com
            - couchdb02
        links:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com
        networks:
          behave:
             aliases:
              - ${CORE_PEER_NETWORKID}

    couchdb11:
        extends:
            file: docker-compose-base.yml
            service: couchdb
        container_name: couchdb11
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    peer1.org1.example.com:
        extends:
            file: docker-compose-base.yml
            service: peer
        container_name: peer1.org1.example.com
        environment:
            - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
            - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb11:5984
            - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org1.example.com:7052
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - CORE_PEER_ID=peer1.org1.example.com
            - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
            - CORE_PEER_LOCALMSPID=org1.example.com
        volumes:
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls:/var/hyperledger/tls
        depends_on:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com
            - peer0.org1.example.com
            - couchdb11
        links:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    couchdb12:
        extends:
            file: docker-compose-base.yml
            service: couchdb
        container_name: couchdb12
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    peer1.org2.example.com:
        extends:
            file: docker-compose-base.yml
            service: peer
        container_name: peer1.org2.example.com
        environment:
            - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
            - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb12:5984
            - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org2.example.com:7052
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - CORE_PEER_ID=peer1.org2.example.com
            - CORE_PEER_ADDRESS=peer1.org2.example.com:7051
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:7051
            - CORE_PEER_LOCALMSPID=org2.example.com
        volumes:
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls:/var/hyperledger/tls
        depends_on:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com
            - peer0.org2.example.com
            - couchdb12
        links:
            - orderer0.example.com
            - orderer1.example.com
            - orderer2.example.com
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}

    cli:
        container_name: cli
        image: hyperledger/fabric-tools
        tty: true
        environment:
            - GOPATH=/opt/gopath
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_LOGGING_GOSSIP=${CORE_LOGGING_GOSSIP}
            # TLS settings
            - CORE_PEER_TLS_ENABLED=${CORE_PEER_TLS_ENABLED}
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: /bin/bash -c 'sleep 6000000000000000000'
        volumes:
            - /var/run/:/host/var/run/
            - ../../fabric/examples/chaincode:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode
            - ../../chaincodes:/opt/gopath/src/github.com/hyperledger/fabric-test/chaincodes
            - ../../fabric/common:/opt/gopath/src/github.com/hyperledger/fabric/common
            - ../../fabric/vendor:/opt/gopath/src/github.com/hyperledger/fabric/vendor
            - ../configs:/var/hyperledger/configs
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/var/hyperledger/tls
        ports:
            - '9092'
        depends_on:
          - orderer0.example.com
          - orderer1.example.com
          - orderer2.example.com
          - peer0.org1.example.com
          - peer1.org1.example.com
          - peer0.org2.example.com
          - peer1.org2.example.com
        networks:
          behave:
             aliases:
               - ${CORE_PEER_NETWORKID}
