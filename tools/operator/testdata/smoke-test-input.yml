tls: true
organizations:
  - name: org1
  # connection profiles can be either in yaml or in json format
    connProfilePath: /home/testuser/gopath/src/github.com/hyperledger/fabric-test/regression/smoke/connection-profile/connection_profile_org1.yaml
  - name: org2
    connProfilePath: /home/testuser/gopath/src/github.com/hyperledger/fabric-test/regression/smoke/connection-profile/connection_profile_org2.yaml

createChannel:
  - channelPrefix: testorgschannel
    numChannels: 1
    channelTxPath: /home/testuser/gopath/src/github.com/hyperledger/fabric-test/regression/smoke/channel-artifacts/
    organizations: org1

anchorPeerUpdate:
  - channelName: testorgschannel0
    organizations: org1
    anchorPeerUpdateTxPath: /home/testuser/gopath/src/github.com/hyperledger/fabric-test/regression/smoke/channel-artifacts/testorgschannel0org1anchor.tx
  - channelName: testorgschannel0
    organizations: org2
    anchorPeerUpdateTxPath: /home/testuser/gopath/src/github.com/hyperledger/fabric-test/regression/smoke/channel-artifacts/testorgschannel0org2anchor.tx

joinChannel:
# joins all peers in listed organziations to all channels based on channelPrefix and numChannels
  - channelPrefix: testorgschannel
    numChannels: 1
    organizations: org1,org2

installChaincode:
# installs chaincode with specified name on all peers in listed organziations
  - chaincodeName: samplecc
    ccVersion: v1
    chaincodePath: /home/testuser/gopath/src/github.com/hyperledger/fabric-test/chaincodes/samplecc/go
    organizations: org1,org2
    language: golang
    metadataPath: ""

  - chaincodeName: samplecc
    ccVersion: v2
    chaincodePath: /home/testuser/gopath/src/github.com/hyperledger/fabric-test/chaincodes/samplecc/go
    organizations: org1,org2
    language: golang
    metadataPath: ""

instantiateChaincode:
  - channelName: testorgschannel0
    chaincodeName: samplecc
    ccVersion: v1
    args: ""
    organizations: org1
    endorsementPolicy: 2of(org1,org2)
    collectionPath: ""

upgradeChaincode:
  - channelName: testorgschannel0
    chaincodeName: samplecc
    ccVersion: v2
    args: ""
    organizations: org1
    endorsementPolicy: 1of(org1,org2)
    collectionPath: ""

invokes:
  - channelName: testorgschannel0
    chaincodeName: samplecc
    targetPeers: OrgAnchor
    nProcPerOrg: 2
    nRequest: 1000
    runDur: 0
    organizations: org1,org2
    txnOpt:
      - mode: constant
        options:
          constFreq: 0
          devFreq: 0
    queryCheck: 100
    eventOpt:
      type: FilteredBlock
      listener:  Block
      timeout: 240000
    ccOpt:
      ccType: ccchecker
      keyStart: 0
      payLoadMin: 1024
      payLoadMax: 2048
    args: "put,a1,1"

queries:
  - channelName: testorgschannel0
    chaincodeName: samplecc
    targetPeers: OrgAnchor
    nProcPerOrg: 2
    nRequest: 100
    runDur: 0
    organizations: org1,org2
    ccOpt:
      ccType: ccchecker
      keyStart: 0
    txnOpt:
      - mode: constant
        options:
          constFreq: 0
          devFreq: 0
    args: "get,a1"
