# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
---
## peer database ledger type (couchdb, goleveldb)
db_type: couchdb
peer_fabric_logging_spec: error
orderer_fabric_logging_spec: error
## tls in the network (disabled, serverauth or enabled, clientauth)  
tls: enabled
## fabric metrics with prometheus (true/false)
metrics: "false"

certs_location: $GOPATH/src/github.com/hyperledger/fabric-test/fabric/internal/cryptogen/

orderer:
  orderertype: solo
  batchsize:
    maxmessagecount: 500
    absolutemaxbytes: 10 MB
    preferredmaxbytes: 2 MB
  batchtimeout: 2s
  etcdraft_options:
    TickInterval: "500ms",
    ElectionTick: 10,
    HeartbeatTick: 1,
    MaxInflightBlocks: 5,
    SnapshotIntervalSize: "100 MB"

kafka:
  num_of_kafka: 5
  num_of_kafka_replications: 3
  num_of_zookeepers: 3

organizations:
- name: orderer-org
  msp_id: OrdererOrgExampleCom
  num_of_orderers: 5
  num_of_ca: 2
- num_of_peer_orgs: 2
### TODO: future enhancement to read individual specs for each org
### and replace the NL -r option which uses num_of_peer_orgs
#- name: org1
#  msp_id: Org1ExampleCom
#  num_of_peers: 2
#  num_of_ca: 1
#- name: org2
#  msp_id: Org2ExampleCom
#  num_of_peers: 2
#  num_of_ca: 1

consortiums:
- name: SampleConsortium
  organizations:
  - org1
  - org2

### NL creates its own systemchannel, so ignore this section
#system_channel:
#  name: systemchannel
#  profile: TwoOrgsOrdererGenesis

# Create the channel creation transactions; every org will be included in every channel
# (note: client will need to submit the transactions)
num_of_channels: 10

### TODO: future enhancement to read individual profiles for each channel creation.
#profiles:
#- name: TwoOrgsOrdererGenesis
#  orderers:
#    - orderer0
#- name: TwoOrgsChannelProfile
#  consortium: SampleConsortium
#  organizations:
#    - org1
#    - org2
#- name: AnotherChannelProfile
#  consortium: SampleConsortium
#  organizations:
#    - org3
#    - org4
