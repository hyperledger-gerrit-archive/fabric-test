#!/bin/bash
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

echo "##########################"
echo "STARTING THE PTE CONTAINER"
echo "##########################"

TIMEOUT=120
waittime=5

function checkTxFiles()
{
local rc=1
local starttime=$(date +%s)

while test "$(($(date +%s)-starttime))" -lt "$TIMEOUT" -a $rc -ne 0
do
    echo "Waiting for $waittime secs"
    sleep $waittime
    ls CITest/*.tx 2>/dev/null
    test $? -eq 0 && let rc=0
done
test $rc -ne 0 && echo "Oops ... Timed out and couldn't find the tx file , exiting" && exit 1
}

#Checking for config files needed for PTE
checkTxFiles

#Copying the channel config txns
cp -r CITest/*.tx /var/hyperledger/fabric/artifacts/keyfiles/
cd $GOPATH/src/github.com/hyperledger/fabric-test/tools/PTE/CITest/scripts
CWD=$PWD/../Logs

{% if testcase != 'multihost' %}
{% for ch in channelnum %}
sed -i 's/\(\"channelTX\"\:\ \"\)\(.*\)/\1\/var\/hyperledger\/fabric\/artifacts\/keyfiles\/testorgschannel{{ ch }}.tx\"\,/g' ../{{ testcase }}/preconfig/channels/chan{{ ch }}-create-TLS.json
{% if chaincode == 'samplejs' %}
sed -i 's/\(\"chaincodePath\"\:\ \"\)\(.*\)/\1\/root\/go\/src\/github.com\/hyperledger\/fabric-test\/chaincodes\/samplecc\/node"\,/g' ../{{ testcase }}/preconfig/{{ chaincode }}/{{ chaincode }}-chan{{ ch }}-install-TLS.json
{% endif %}
{% endfor %}
{% endif %}

echo "#########################################"
echo "#          STARTING THE TESTS           #"
echo "#########################################"
echo "Creating Channel, Joining Peers to Channel, Installing and Instantiating the Chaincode"
./test_driver.sh -m {{ testcase }} -p -c {{ chaincode }} -t {{ testcase_query }}

#Log
echo "###########"Logs for {{ testcase_query }}"############"
cat ../Logs/{{ testcase_query }}*.log
rm -rf ../Logs/{{ testcase_query }}*.log

echo "Sending Invokes"
./test_driver.sh -m {{ testcase }} -t {{ testcase }}
while ps axg | grep -vw grep | grep -w "node ./pte-execRequest.js" > /dev/null; do sleep 60; done

#Invoke log
echo "###########"Logs for {{ testcase }}"############"
cat ../Logs/{{ testcase }}*.log

echo "Sending Queries"
./test_driver.sh -m {{ testcase_query }} -t {{ testcase_query }}
while ps axg | grep -vw grep | grep -w "node ./pte-execRequest.js" > /dev/null; do sleep 60; done

#Query log
echo "###########"Logs for {{ testcase_query }}"############"
cat ../Logs/{{ testcase_query }}*.log

echo "#########################################"
echo "#      COMPLETED RUNNING THE TESTS      #"
echo "#########################################"
